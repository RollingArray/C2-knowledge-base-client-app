{"version":3,"sources":["webpack:///src/app/pages/menu/menu.module.ts","webpack:///src/app/shared/service/menu.service.ts","webpack:///src/app/pages/menu/menu.page.scss","webpack:///src/app/shared/service/article.service.ts","webpack:///src/app/shared/service/parent-child-menu.service.ts","webpack:///src/app/shared/constant/api-urls.constant.ts","webpack:///src/app/pages/menu/menu.page.html","webpack:///src/app/pages/menu/menu.page.ts","webpack:///src/app/shared/enum/operation.enum.ts","webpack:///src/app/shared/constant/string.constant.ts","webpack:///src/app/shared/service/settings.service.ts","webpack:///src/app/shared/service/base.service.ts"],"names":["routes","path","redirectTo","pathMatch","component","children","loadChildren","then","m","ArticlesPageModule","MenuPageModule","imports","forChild","declarations","MenuService","httpClient","post","MENU","providedIn","ArticleService","article","ARTICLE_DETAILS","ARTICLE_CRUD","ARTICLE_FEEDBACK","ParentChildMenuService","parentChildMenuRelation","MENU_CRUD","ApiUrls","API_ENDPOINT","apiEndpoint","API_VERSION","API_BASE_PATH","CONTENT_CRUD","SETTINGS","MenuPage","menuService","parentChildMenuService","articleService","router","activatedRoute","alertController","settingsService","stringKey","allowPreview","loadData","_rootMenuModel","_settingsModel","getData","subscribe","data","settings","menu","firstArticle","childMenu","articleId","navigate","create","header","inputs","name","type","placeholder","buttons","text","role","cssClass","handler","console","log","articleModel","articleTitle","trim","toLowerCase","replace","operationType","CREATE","crudArticleMenu","parentMenuModel","articleParentId","parentMenuOrder","length","articleChildId","childMenuOrder","crudMenu","alert","present","mainMenu","success","parentMenu","order","passedData","parseInt","toString","EDIT","value","DELETE","appName","signUpUrl","supportEmail","settingsModel","crudSettings","selector","template","OperationEnum","StringKey","HE_SU_CE","AD_ME_CAT","ORD","DOW","UP","AD_ME","SUP_TXT","HLPFL","SRC","THNKU","THNKU_INFO","FDBK","ICON_BASE_PATH","ICON_MENU","ICON_RIGHT_ARROW","ICON_ADD","ICON_EDIT","ICON_DELETE","ICON_SEARCH","ICON_HELP","ICON_BOOKMARK","ICON_SAD","ICON_NEUTRAL","ICON_DELIGHTFUL","ICON_LOADER","SettingsService","BaseService","subscription","unsubscribe","url","apiData","get","pipe","response","error"],"mappings":"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","file":"pages-menu-menu-module-es5.js","sourcesContent":["/**\n * © Rolling Array https://rollingarray.co.in/\n *\n * long description for the file\n *\n * @summary Menu page module\n * @author code@rollingarray.co.in\n *\n * Created at     : 2021-11-01 20:47:46 \n * Last modified  : 2021-11-23 20:12:29\n */\n\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { MenuPage } from \"./menu.page\";\n\nconst routes: Routes = [\n\t{\n\t\tpath: \"\",\n\t\tredirectTo: \"articles\",\n\t\tpathMatch: \"full\",\n\t},\n\t{\n\t\tpath: \"\",\n\t\tcomponent: MenuPage,\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tpath: 'articles/:articleId',\n\t\t\t\tloadChildren: () => import('../articles/articles.module').then(m => m.ArticlesPageModule)\n\t\t\t},\n\t\t]\n\t},\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tIonicModule,\n\t\tRouterModule.forChild(routes)\n\t],\n\tdeclarations: [MenuPage]\n})\nexport class MenuPageModule { }\n","/**\n * © Rolling Array https://rollingarray.co.in/\n *\n *\n * @summary Menu service\n * @author code@rollingarray.co.in\n *\n * Created at     : 2021-12-16 20:56:21 \n * Last modified  : 2021-12-16 20:56:21 \n */\n\n\n\nimport { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { ApiUrls } from \"../constant/api-urls.constant\";\nimport { MenuSettingsModel } from \"../model/menu-settings.model\";\nimport { BaseService } from \"./base.service\";\n\n@Injectable({\n\tprovidedIn: \"root\"\n})\nexport class MenuService extends BaseService<MenuSettingsModel> {\n\t/**\n\t * @param  {HttpClient} httpClient\n\t */\n\tconstructor(\n\t\thttpClient: HttpClient,\n\t)\n\t{\n\t\tsuper(\n\t\t\thttpClient,\n\t\t);\n\t}\n\n\t/**\n\t * Gets menu\n\t * @returns menu \n\t */\n\tgetData(): Observable<MenuSettingsModel>\n\t{\n\t\treturn this.post(ApiUrls.MENU, {});\n\t}\n}\n","export default \"@charset \\\"UTF-8\\\";\\n/**\\n * © Rolling Array https://rollingarray.co.in/\\n *\\n * long description for the file\\n *\\n * @summary Menu page template style\\n * @author code@rollingarray.co.in\\n *\\n * Created at     : 2021-11-01 20:47:46 \\n * Last modified  : 2021-11-17 20:18:47\\n */\\n.active {\\n  --ion-text-color: var(--ion-color-primary);\\n}\\n.active ion-icon {\\n  --ion-text-color-rgb: var(--ion-color-primary);\\n}\\n.parent-active {\\n  font-weight: 500;\\n}\\n.sub-item {\\n  padding-left: 0px;\\n  font-size: small;\\n}\\n.fav-icon1 {\\n  position: relative;\\n  width: 50% !important;\\n}\\n.segment {\\n  text-shadow: 1px 1px #000;\\n}\\nion-col {\\n  text-align: center;\\n}\\n.segment {\\n  display: block;\\n  line-height: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL21lbnUucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQjtBQUFoQjs7Ozs7Ozs7OztFQUFBO0FBV0E7RUFDSSwwQ0FBQTtBQUVKO0FBREk7RUFDSSw4Q0FBQTtBQUdSO0FBQ0E7RUFDSSxnQkFBQTtBQUVKO0FBQ0E7RUFDSSxpQkFBQTtFQUNBLGdCQUFBO0FBRUo7QUFFQTtFQUNFLGtCQUFBO0VBQ0EscUJBQUE7QUFDRjtBQUVBO0VBQ0MseUJBQUE7QUFDRDtBQUVBO0VBQ0Usa0JBQUE7QUFDRjtBQUVBO0VBQ0UsY0FBQTtFQUNBLGlCQUFBO0FBQ0YiLCJmaWxlIjoibWVudS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIMKpIFJvbGxpbmcgQXJyYXkgaHR0cHM6Ly9yb2xsaW5nYXJyYXkuY28uaW4vXG4gKlxuICogbG9uZyBkZXNjcmlwdGlvbiBmb3IgdGhlIGZpbGVcbiAqXG4gKiBAc3VtbWFyeSBNZW51IHBhZ2UgdGVtcGxhdGUgc3R5bGVcbiAqIEBhdXRob3IgY29kZUByb2xsaW5nYXJyYXkuY28uaW5cbiAqXG4gKiBDcmVhdGVkIGF0ICAgICA6IDIwMjEtMTEtMDEgMjA6NDc6NDYgXG4gKiBMYXN0IG1vZGlmaWVkICA6IDIwMjEtMTEtMTcgMjA6MTg6NDdcbiAqL1xuLmFjdGl2ZSB7XG4gICAgLS1pb24tdGV4dC1jb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xuICAgIGlvbi1pY29uIHtcbiAgICAgICAgLS1pb24tdGV4dC1jb2xvci1yZ2I6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KTtcbiAgICB9XG59XG4gXG4ucGFyZW50LWFjdGl2ZSB7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cbiBcbi5zdWItaXRlbSB7XG4gICAgcGFkZGluZy1sZWZ0OiAwcHg7XG4gICAgZm9udC1zaXplOiBzbWFsbDtcbn1cblxuXG4uZmF2LWljb24xIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7IFxufVxuXG4uc2VnbWVudCB7XG5cdHRleHQtc2hhZG93OiAxcHggMXB4ICMwMDA7XG59XG5cbmlvbi1jb2x7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnNlZ21lbnR7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBsaW5lLWhlaWdodDogNDBweDtcbn0iXX0= */\";","/**\n * © Rolling Array https://rollingarray.co.in/\n *\n *\n * @summary Article service\n * @author code@rollingarray.co.in\n *\n * Created at     : 2021-12-16 20:55:55 \n * Last modified  : 2021-12-16 20:55:55 \n */\n\nimport { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { ApiUrls } from \"../constant/api-urls.constant\";\nimport { ArticleModel } from \"../model/article.model\";\nimport { MenusModel } from \"../model/menu.model\";\nimport { BaseService } from \"./base.service\";\n\n@Injectable({\n\tprovidedIn: \"root\"\n})\nexport class ArticleService extends BaseService<ArticleModel> {\n\t/**\n\t * @param  {HttpClient} httpClient\n\t */\n\tconstructor(\n\t\thttpClient: HttpClient,\n\t)\n\t{\n\t\tsuper(\n\t\t\thttpClient,\n\t\t);\n\t}\n\n\t/**\n\t * Gets data\n\t * @param article \n\t * @returns data \n\t */\n\tgetData(article: ArticleModel): Observable<ArticleModel>\n\t{\n\t\treturn this.post(ApiUrls.ARTICLE_DETAILS, article);\n\t}\n\n\t/**\n\t * Cruds article menu\n\t * @param article \n\t * @returns article menu \n\t */\n\tcrudArticleMenu(article: ArticleModel): Observable<ArticleModel>\n\t{\n\t\treturn this.post(ApiUrls.ARTICLE_CRUD, article);\n\t}\n\n\t/**\n\t * Articles feedback\n\t * @param article \n\t * @returns feedback \n\t */\n\tarticleFeedback(article: ArticleModel): Observable<ArticleModel>\n\t{\n\t\treturn this.post(ApiUrls.ARTICLE_FEEDBACK, article);\n\t}\n\n\t\n\n\t\n}\n","/**\n * © Rolling Array https://rollingarray.co.in/\n *\n *\n * @summary Parent child menu service\n * @author code@rollingarray.co.in\n *\n * Created at     : 2021-12-16 20:56:39 \n * Last modified  : 2021-12-16 20:56:54\n */\n\nimport { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { ApiUrls } from \"../constant/api-urls.constant\";\nimport { ParentMenuModel } from \"../model/parent-menu.model\";\nimport { BaseService } from \"./base.service\";\n\n@Injectable({\n\tprovidedIn: \"root\"\n})\nexport class ParentChildMenuService extends BaseService<ParentMenuModel> {\n\t/**\n\t * @param  {HttpClient} httpClient\n\t */\n\tconstructor(\n\t\thttpClient: HttpClient,\n\t)\n\t{\n\t\tsuper(\n\t\t\thttpClient,\n\t\t);\n\t}\n\n\t/**\n\t * Gets menu\n\t * @returns menu \n\t */\n\t crudMenu(parentChildMenuRelation: ParentMenuModel): Observable<ParentMenuModel>\n\t{\n\t\treturn this.post(ApiUrls.MENU_CRUD, parentChildMenuRelation);\n\t}\n}\n","/**\n * © Rolling Array https://rollingarray.co.in/\n *\n * long description for the file\n *\n * @summary Api urls\n * @author code@rollingarray.co.in\n *\n * Created at     : 2021-11-15 21:34:14 \n * Last modified  : 2021-11-19 20:04:04\n */\n\nimport { environment } from \"../../../environments/environment\";\n\nexport class ApiUrls {\n\tpublic static readonly API_ENDPOINT: string = environment.apiEndpoint;\n\tpublic static readonly API_VERSION: string = \"v1\";\n\tpublic static readonly API_BASE_PATH: string = ApiUrls.API_ENDPOINT + ApiUrls.API_VERSION;\n\n\t// urls\n\tpublic static readonly MENU: string = ApiUrls.API_BASE_PATH + \"/menus\";\n\tpublic static readonly ARTICLE_DETAILS: string = ApiUrls.API_BASE_PATH + \"/article/details\";\n\tpublic static readonly ARTICLE_CRUD: string = ApiUrls.API_BASE_PATH + \"/article/crud\";\n\tpublic static readonly MENU_CRUD: string = ApiUrls.API_BASE_PATH + \"/menu/crud\";\n\tpublic static readonly CONTENT_CRUD: string = ApiUrls.API_BASE_PATH + \"/content/crud\";\n\tpublic static readonly SETTINGS: string = ApiUrls.API_BASE_PATH + \"/settings\";\n\tpublic static readonly ARTICLE_FEEDBACK: string = ApiUrls.API_BASE_PATH + \"/article/feedback\";\n\t\n}\n","export default \"<!-- \\n/**\\n * © Rolling Array https://rollingarray.co.in/\\n *\\n *\\n * @summary Menu page template\\n * @author code@rollingarray.co.in\\n *\\n * Created at     : 2021-11-01 20:47:46 \\n * Last modified  : 2021-11-17 20:24:35\\n */\\n -->\\n<ion-app>\\n    <ion-split-pane contentId=\\\"content\\\">\\n        <ion-menu contentId=\\\"content\\\" type=\\\"overlay\\\" color=\\\"light\\\">\\n            <!-- header -->\\n            <ion-header lines=\\\"none\\\" class=\\\"ion-no-border\\\">\\n                <ion-menu-toggle auto-hide=\\\"false\\\">\\n                    <ion-toolbar color=\\\"medium\\\">\\n                        <ion-card class=\\\"cursor-pointer margin-top-20-px\\\">\\n                            <ion-item color=\\\"primary\\\" lines=\\\"none\\\">\\n                                <ion-label *ngIf=\\\"settingsModel\\\">\\n                                    <b\\n                                        ><ion-text color=\\\"info\\\"\\n                                            >{{settingsModel.appName}}</ion-text\\n                                        >\\n                                        {{stringKey.HE_SU_CE}}</b\\n                                    >\\n                                </ion-label>\\n                            </ion-item>\\n                            <!-- toolbar -->\\n                            <ion-item color=\\\"info\\\" *ngIf=\\\"allowPreview\\\">\\n                                <ion-button slot=\\\"end\\\" (click)=\\\"editSettings()\\\">\\n                                    <ion-icon\\n                                        [src]=\\\"stringKey.ICON_EDIT\\\"\\n                                    ></ion-icon>\\n                                </ion-button>\\n                            </ion-item>\\n                        </ion-card>\\n                    </ion-toolbar>\\n                </ion-menu-toggle>\\n            </ion-header>\\n            <!-- header -->\\n\\n            <ion-content color=\\\"light\\\">\\n                <!-- add menu category -->\\n                <ion-item color=\\\"info\\\" *ngIf=\\\"allowPreview\\\">\\n                    <ion-button (click)=\\\"addMenuCategory()\\\">\\n                        <ion-icon [src]=\\\"stringKey.ICON_ADD\\\"></ion-icon>\\n                        &nbsp; {{stringKey.AD_ME_CAT}}\\n                    </ion-button>\\n                </ion-item>\\n                <!-- add menu category -->\\n\\n                <!-- add menu category -->\\n                <ion-menu-toggle auto-hide=\\\"false\\\" *ngIf=\\\"rootMenuModel\\\">\\n                    <ion-card\\n                        class=\\\"cursor-pointer\\\"\\n                        color=\\\"medium\\\"\\n                        *ngFor=\\\"let eachRootMenu of rootMenuModel.data\\\"\\n                    >\\n                        <!-- root menu -->\\n                        <ion-item color=\\\"medium\\\" lines=\\\"none\\\">\\n                            <ion-icon\\n                                [src]=\\\"stringKey.ICON_MENU\\\"\\n                                slot=\\\"start\\\"\\n                            ></ion-icon>\\n                            <ion-label>\\n                                {{eachRootMenu.articleTitle}}\\n                            </ion-label>\\n                        </ion-item>\\n                        <!-- root menu -->\\n\\n                        <!-- toolbar -->\\n                        <ion-item color=\\\"info\\\" *ngIf=\\\"allowPreview\\\">\\n                            <ion-button>\\n                                {{stringKey.ORD}} ::\\n                                {{eachRootMenu.parentMenuOrder}}\\n                            </ion-button>\\n\\n                            <ion-button\\n                                (click)=\\\"orderMainMenu(eachRootMenu, 'up')\\\"\\n                            >\\n                                {{stringKey.UP}}\\n                            </ion-button>\\n                            <ion-button\\n                                (click)=\\\"orderMainMenu(eachRootMenu, 'down')\\\"\\n                            >\\n                                {{stringKey.DOW}}\\n                            </ion-button>\\n                        </ion-item>\\n                        <ion-item color=\\\"info\\\" *ngIf=\\\"allowPreview\\\">\\n                            <ion-button (click)=\\\"addSubMainMenu(eachRootMenu)\\\">\\n                                <ion-icon [src]=\\\"stringKey.ICON_ADD\\\"></ion-icon>\\n                                &nbsp; {{stringKey.AD_ME}}\\n                            </ion-button>\\n                            <ion-button\\n                                slot=\\\"end\\\"\\n                                (click)=\\\"editMainMenu(eachRootMenu)\\\"\\n                            >\\n                                <ion-icon\\n                                    [src]=\\\"stringKey.ICON_EDIT\\\"\\n                                ></ion-icon>\\n                            </ion-button>\\n                            <ion-button\\n                                slot=\\\"end\\\"\\n                                (click)=\\\"deleteMainMenu(eachRootMenu)\\\"\\n                            >\\n                                <ion-icon\\n                                    [src]=\\\"stringKey.ICON_DELETE\\\"\\n                                ></ion-icon>\\n                            </ion-button>\\n                        </ion-item>\\n                        <!-- toolbar -->\\n\\n                        <!-- child menu -->\\n                        <ion-menu-toggle auto-hide=\\\"false\\\">\\n                            <ion-card\\n                                class=\\\"cursor-pointer\\\"\\n                                *ngFor=\\\"let eachMenu of eachRootMenu.childMenu.data; ; index as eachMenuIndex\\\"\\n                                (click)=\\\"gotoPage(eachMenu.articleId)\\\"\\n                            >\\n                                <ion-item\\n                                    lines=\\\"none\\\"\\n                                    color=\\\"light\\\"\\n                                    routerDirection=\\\"root\\\"\\n                                    routerLinkActive=\\\"active\\\"\\n                                >\\n                                    <ion-icon\\n                                        slot=\\\"start\\\"\\n                                        [src]=\\\"stringKey.ICON_RIGHT_ARROW\\\"\\n                                    ></ion-icon>\\n                                    {{eachMenu.articleTitle}}\\n                                </ion-item>\\n                                <!-- toolbar -->\\n                                <ion-item color=\\\"medium\\\" *ngIf=\\\"allowPreview\\\">\\n                                    <ion-button>\\n                                        {{stringKey.ORD}} ::\\n                                        {{eachMenu.childMenuOrder}}\\n                                    </ion-button>\\n                                    <ion-button\\n                                        (click)=\\\"orderSubMenu(eachRootMenu, eachMenu, 'up')\\\"\\n                                    >\\n                                        {{stringKey.UP}}\\n                                    </ion-button>\\n                                    <ion-button\\n                                        (click)=\\\"orderSubMenu(eachRootMenu, eachMenu, 'down')\\\"\\n                                    >\\n                                        {{stringKey.DOW}}\\n                                    </ion-button>\\n                                </ion-item>\\n\\n                                <ion-item color=\\\"medium\\\" *ngIf=\\\"allowPreview\\\">\\n                                    <ion-button\\n                                        slot=\\\"end\\\"\\n                                        (click)=\\\"editChildMenu(eachMenu)\\\"\\n                                    >\\n                                        <ion-icon\\n                                            [src]=\\\"stringKey.ICON_EDIT\\\"\\n                                        ></ion-icon>\\n                                    </ion-button>\\n                                    <ion-button\\n                                        slot=\\\"end\\\"\\n                                        (click)=\\\"deleteChildMenu(eachRootMenu, eachMenu)\\\"\\n                                    >\\n                                        <ion-icon\\n                                            [src]=\\\"stringKey.ICON_DELETE\\\"\\n                                        ></ion-icon>\\n                                    </ion-button>\\n                                </ion-item>\\n                                <!-- toolbar -->\\n                            </ion-card>\\n                        </ion-menu-toggle>\\n                        <!-- child menu -->\\n                    </ion-card>\\n                </ion-menu-toggle>\\n            </ion-content>\\n        </ion-menu>\\n        <ion-router-outlet id=\\\"content\\\"></ion-router-outlet>\\n    </ion-split-pane>\\n</ion-app>\\n\";","/**\n * © Rolling Array https://rollingarray.co.in/\n *\n * long description for the file\n *\n * @summary Menu page\n * @author code@rollingarray.co.in\n *\n * Created at     : 2021-11-01 20:47:46 \n * Last modified  : 2021-12-16 20:51:36\n */\n\nimport { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AlertController } from \"@ionic/angular\";\nimport { StringKey } from \"src/app/shared/constant/string.constant\";\nimport { OperationEnum } from \"src/app/shared/enum/operation.enum\";\nimport { ArticleModel } from \"src/app/shared/model/article.model\";\nimport { ChildMenuModel } from \"src/app/shared/model/child-menu.model\";\nimport { MenusModel } from \"src/app/shared/model/menu.model\";\nimport { ParentMenuModel } from \"src/app/shared/model/parent-menu.model\";\nimport { SettingsModel } from \"src/app/shared/model/settings.model\";\nimport { ArticleService } from \"src/app/shared/service/article.service\";\nimport { MenuService } from \"src/app/shared/service/menu.service\";\nimport { ParentChildMenuService } from \"src/app/shared/service/parent-child-menu.service\";\nimport { SettingsService } from \"src/app/shared/service/settings.service\";\nimport { environment } from \"src/environments/environment\";\n\n@Component({\n\tselector: \"app-menu\",\n\ttemplateUrl: \"./menu.page.html\",\n\tstyleUrls: [\"./menu.page.scss\"],\n})\nexport class MenuPage implements OnInit, OnDestroy\n{\n\t/**\n\t * String key of menu page\n\t */\n\treadonly stringKey = StringKey;\n\n\t/**\n\t * Root menu model of menu page\n\t */\n\tprivate _rootMenuModel: MenusModel;\n\n\t/**\n\t * Settings model of menu page\n\t */\n\tprivate _settingsModel: SettingsModel;\n\n\t/**\n\t * Allow preview of menu page\n\t */\n\treadonly allowPreview = environment.allowPreview;\n\n\t/**\n\t * Gets root menu model\n\t */\n\tget rootMenuModel()\n\t{\n\t\treturn this._rootMenuModel;\n\t}\n\n\t/**\n\t * Gets settings model\n\t */\n\tget settingsModel()\n\t{\n\t\treturn this._settingsModel;\n\t}\n\t/**\n\t * Creates an instance of project members page.\n\t * @param injector \n\t */\n\tconstructor(\n\t\tprivate menuService: MenuService,\n\t\tprivate parentChildMenuService: ParentChildMenuService,\n\t\tprivate articleService: ArticleService,\n\t\tprivate router: Router,\n\t\tprivate activatedRoute: ActivatedRoute,\n\t\tprivate alertController: AlertController,\n\t\tprivate settingsService: SettingsService\n\t)\n\t{\n\t\tthis.loadData();\n\t}\n\n\t/**\n\t * on init\n\t */\n\tasync ngOnInit()\n\t{\n\t\t//\n\t}\n\n\t/**\n\t * Ions view did enter\n\t */\n\tasync ionViewDidEnter()\n\t{\n\n\t\t//\n\t}\n\n\t/**\n\t * on destroy\n\t */\n\tngOnDestroy()\n\t{\n\t\t//\n\t}\n\n\t// load data\n\tloadData()\n\t{\n\t\tthis.menuService.getData().subscribe(data =>\n\t\t{\n\t\t\tthis._settingsModel = data.settings;\n\t\t\tthis._rootMenuModel = data.menu;\n\t\t\tconst firstArticle = this._rootMenuModel.data[0].childMenu.data[0].articleId;\n\t\t\tthis.router.navigate(['go','articles', firstArticle]);\n\t\t});\n\t}\n\n\tgotoPage(articleId: string)\n\t{\n\n\t\tthis.router.navigate(['go','articles', articleId]);\n\t}\n\n\t/**\n\t * Adds main menu\n\t */\n\tpublic async addMenuCategory()\n\t{\n\t\tconst alert = await this.alertController.create({\n\t\t\theader: 'Prompt!',\n\t\t\tinputs: [\n\t\t\t\t{\n\t\t\t\t\tname: 'articleTitle',\n\t\t\t\t\ttype: 'textarea',\n\t\t\t\t\tplaceholder: 'Article title'\n\t\t\t\t},\n\t\t\t],\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\ttext: 'Cancel',\n\t\t\t\t\trole: 'cancel',\n\t\t\t\t\tcssClass: 'secondary',\n\t\t\t\t\thandler: () =>\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('Confirm Cancel');\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\ttext: 'Ok',\n\t\t\t\t\thandler: (data) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tconst articleModel: ArticleModel = {\n\t\t\t\t\t\t\tarticleId: data.articleTitle!.trim().toLowerCase().replace(/ /g, \"-\"),\n\t\t\t\t\t\t\tarticleTitle: data.articleTitle,\n\t\t\t\t\t\t\toperationType: OperationEnum.CREATE\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.articleService.crudArticleMenu(articleModel).subscribe(data =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst parentMenuModel: ParentMenuModel = {\n\t\t\t\t\t\t\t\tarticleParentId: articleModel.articleId,\n\t\t\t\t\t\t\t\tparentMenuOrder: this._rootMenuModel.data.length + 1,\n\t\t\t\t\t\t\t\tarticleChildId: '',\n\t\t\t\t\t\t\t\tchildMenuOrder: 0,\n\t\t\t\t\t\t\t\toperationType: OperationEnum.CREATE\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tthis.parentChildMenuService.crudMenu(parentMenuModel).subscribe(data =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.loadData();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\n\t\tawait alert.present();\n\t}\n\n\tpublic async addSubMainMenu(mainMenu: ParentMenuModel)\n\t{\n\t\tconst alert = await this.alertController.create({\n\t\t\theader: 'Prompt!',\n\t\t\tinputs: [\n\t\t\t\t{\n\t\t\t\t\tname: 'articleTitle',\n\t\t\t\t\ttype: 'textarea',\n\t\t\t\t\tplaceholder: 'Article title'\n\t\t\t\t},\n\t\t\t],\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\ttext: 'Cancel',\n\t\t\t\t\trole: 'cancel',\n\t\t\t\t\tcssClass: 'secondary',\n\t\t\t\t\thandler: () =>\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('Confirm Cancel');\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\ttext: 'Ok',\n\t\t\t\t\thandler: (data) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tconst articleModel: ArticleModel = {\n\t\t\t\t\t\t\tarticleId: data.articleTitle!.trim().toLowerCase().replace(/ /g, \"-\"),\n\t\t\t\t\t\t\tarticleTitle: data.articleTitle,\n\t\t\t\t\t\t\toperationType: OperationEnum.CREATE\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.articleService.crudArticleMenu(articleModel).subscribe(data =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst parentMenuModel: ParentMenuModel = {\n\t\t\t\t\t\t\t\tarticleParentId: mainMenu.articleParentId,\n\t\t\t\t\t\t\t\tparentMenuOrder: mainMenu.parentMenuOrder,\n\t\t\t\t\t\t\t\tarticleChildId: articleModel.articleId,\n\t\t\t\t\t\t\t\tchildMenuOrder: mainMenu.childMenu.success ? mainMenu.childMenu.data.length + 1 : 1,\n\t\t\t\t\t\t\t\toperationType: OperationEnum.CREATE\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tthis.parentChildMenuService.crudMenu(parentMenuModel).subscribe(data =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.loadData();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\n\t\tawait alert.present();\n\t}\n\n\t/**\n\t * Orders up main menu\n\t * @param parentMenu \n\t */\n\tpublic orderMainMenu(parentMenu: ParentMenuModel, order: string)\n\t{\n\t\tconst passedData: ParentMenuModel = {\n\t\t\t...parentMenu,\n\t\t\tparentMenuOrder: order === 'up' ? parseInt(parentMenu.parentMenuOrder.toString()) + 1 : parseInt(parentMenu.parentMenuOrder.toString()) - 1,\n\t\t\toperationType: OperationEnum.EDIT\n\t\t};\n\n\t\tthis.parentChildMenuService.crudMenu(passedData).subscribe(data =>\n\t\t{\n\t\t\tthis.loadData();\n\t\t});\n\t}\n\n\t/**\n\t * Edits main menu\n\t * @param parentMenu \n\t */\n\tpublic async editMainMenu(parentMenu: ParentMenuModel)\n\t{\n\t\tconst alert = await this.alertController.create({\n\t\t\theader: 'Prompt!',\n\t\t\tinputs: [\n\t\t\t\t{\n\t\t\t\t\tvalue: parentMenu.articleTitle,\n\t\t\t\t\tname: 'articleTitle',\n\t\t\t\t\ttype: 'textarea',\n\t\t\t\t\tplaceholder: 'Article title'\n\t\t\t\t},\n\t\t\t],\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\ttext: 'Cancel',\n\t\t\t\t\trole: 'cancel',\n\t\t\t\t\tcssClass: 'secondary',\n\t\t\t\t\thandler: () =>\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('Confirm Cancel');\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\ttext: 'Ok',\n\t\t\t\t\thandler: (data) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tconst articleModel: ArticleModel = {\n\t\t\t\t\t\t\tarticleId: parentMenu.articleParentId,\n\t\t\t\t\t\t\tarticleTitle: data.articleTitle,\n\t\t\t\t\t\t\toperationType: OperationEnum.EDIT\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.articleService.crudArticleMenu(articleModel).subscribe(data =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.loadData();\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\n\t\tawait alert.present();\n\t}\n\n\t/**\n\t * Deletes main menu\n\t * @param parentMenu \n\t */\n\tpublic deleteMainMenu(parentMenu: ParentMenuModel)\n\t{\n\t\tconst passedData: ParentMenuModel = {\n\t\t\t...parentMenu,\n\t\t\toperationType: OperationEnum.DELETE\n\t\t};\n\n\t\tthis.parentChildMenuService.crudMenu(passedData).subscribe(data =>\n\t\t{\n\t\t\tthis.loadData();\n\t\t});\n\t}\n\n\t/**\n\t * Orders sub menu\n\t * @param parentMenu \n\t * @param order \n\t */\n\tpublic orderSubMenu(parentMenu: ParentMenuModel, childMenu: ChildMenuModel, order: string)\n\t {\n\t\t const passedData: ParentMenuModel = {\n\t\t\t ...parentMenu,\n\t\t\t articleChildId: childMenu.articleId,\n\t\t\t childMenuOrder: order === 'up' ? parseInt(childMenu.childMenuOrder.toString()) + 1 : parseInt(childMenu.childMenuOrder.toString()) - 1,\n\t\t\t operationType: OperationEnum.EDIT\n\t\t };\n \n\t\t this.parentChildMenuService.crudMenu(passedData).subscribe(data =>\n\t\t {\n\t\t\t this.loadData();\n\t\t });\n\t }\n\n\t/**\n\t * Edits child menu\n\t * @param childMenu \n\t */\n\tpublic async editChildMenu(childMenu: ChildMenuModel)\n\t{\n\t\tconst alert = await this.alertController.create({\n\t\t\theader: 'Prompt!',\n\t\t\tinputs: [\n\t\t\t\t{\n\t\t\t\t\tvalue: childMenu.articleTitle,\n\t\t\t\t\tname: 'articleTitle',\n\t\t\t\t\ttype: 'textarea',\n\t\t\t\t\tplaceholder: 'Article title'\n\t\t\t\t},\n\t\t\t],\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\ttext: 'Cancel',\n\t\t\t\t\trole: 'cancel',\n\t\t\t\t\tcssClass: 'secondary',\n\t\t\t\t\thandler: () =>\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('Confirm Cancel');\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\ttext: 'Ok',\n\t\t\t\t\thandler: (data) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tconst articleModel: ArticleModel = {\n\t\t\t\t\t\t\tarticleId: childMenu.articleId,\n\t\t\t\t\t\t\tarticleTitle: data.articleTitle,\n\t\t\t\t\t\t\toperationType: OperationEnum.EDIT\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.articleService.crudArticleMenu(articleModel).subscribe(data =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.loadData();\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\n\t\tawait alert.present();\n\t}\n\n\t/**\n\t * Deletes child menu\n\t * @param childMenu \n\t */\n\tpublic deleteChildMenu(parentMenu: ParentMenuModel, childMenu: ChildMenuModel)\n\t{\n\t\tconst passedData: ParentMenuModel = {\n\t\t\t...parentMenu,\n\t\t\tarticleChildId: childMenu.articleId,\n\t\t\toperationType: OperationEnum.DELETE\n\t\t};\n\n\t\tthis.parentChildMenuService.crudMenu(passedData).subscribe(data =>\n\t\t{\n\t\t\tthis.loadData();\n\t\t});\n\t}\n\n\t\n\tpublic async editSettings()\n\t{\n\t\tconst alert = await this.alertController.create({\n\t\t\theader: 'Prompt!',\n\t\t\tinputs: [\n\t\t\t\t{\n\t\t\t\t\tvalue: this._settingsModel.appName,\n\t\t\t\t\tname: 'appName',\n\t\t\t\t\ttype: 'textarea',\n\t\t\t\t\tplaceholder: 'App name'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tvalue: this._settingsModel.signUpUrl,\n\t\t\t\t\tname: 'signUpUrl',\n\t\t\t\t\ttype: 'textarea',\n\t\t\t\t\tplaceholder: 'Sign up url'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tvalue: this._settingsModel.supportEmail,\n\t\t\t\t\tname: 'supportEmail',\n\t\t\t\t\ttype: 'textarea',\n\t\t\t\t\tplaceholder: 'Support Email'\n\t\t\t\t},\n\t\t\t],\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\ttext: 'Cancel',\n\t\t\t\t\trole: 'cancel',\n\t\t\t\t\tcssClass: 'secondary',\n\t\t\t\t\thandler: () =>\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('Confirm Cancel');\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\ttext: 'Ok',\n\t\t\t\t\thandler: (data) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tconst settingsModel: SettingsModel = {\n\t\t\t\t\t\t\tappName: data.appName,\n\t\t\t\t\t\t\tsignUpUrl: data.signUpUrl,\n\t\t\t\t\t\t\tsupportEmail: data.supportEmail\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.settingsService.crudSettings(settingsModel).subscribe(data =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.loadData();\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\n\t\tawait alert.present();\n\t}\n\n}\n","export enum OperationEnum\n{\n    CREATE = \"create\",\n    EDIT = \"edit\",\n    DELETE = \"delete\"\n}","/**\n * © Rolling Array https://rollingarray.co.in/\n *\n *\n * @summary Global string key\n * @author code@rollingarray.co.in\n *\n * Created at     : 2021-05-18 19:16:27 \n * Last modified  : 2021-12-16 21:04:40\n */\n\n\nexport class StringKey {\n\n\tpublic static readonly HE_SU_CE: string = \"Help & Support Center\";\n\tpublic static readonly AD_ME_CAT: string = \"Add Menu Category\";\n\tpublic static readonly ORD: string = \"Order\";\n\tpublic static readonly DOW: string = \"Down\";\n\tpublic static readonly UP: string = \"Up\";\n\tpublic static readonly AD_ME: string = \"Add Menu\";\n\tpublic static readonly SUP_TXT: string = 'We\\'re always happy to help out with your any other questions you might have. You can ask a question at';\n\tpublic static readonly HLPFL: string = \"Was this article helpful?\";\n\tpublic static readonly SRC: string = \"Search\";\n\tpublic static readonly THNKU: string = \"Thank You!!\";\n\tpublic static readonly THNKU_INFO: string = \"Feedback always helps to improve, thank You for your feedback!!\";\n\tpublic static readonly FDBK: string = \"Feedback\";\n\n\tpublic static readonly ICON_BASE_PATH: string = \"assets/custom-ion-icons/\";\n\tpublic static readonly ICON_MENU: string = StringKey.ICON_BASE_PATH + \"menu.svg\";\n\tpublic static readonly ICON_RIGHT_ARROW: string = StringKey.ICON_BASE_PATH + \"right-arrow.svg\";\n\tpublic static readonly ICON_ADD: string = StringKey.ICON_BASE_PATH + \"add.svg\";\n\tpublic static readonly ICON_EDIT: string = StringKey.ICON_BASE_PATH + \"edit.svg\";\n\tpublic static readonly ICON_DELETE: string = StringKey.ICON_BASE_PATH + \"delete.svg\";\n\tpublic static readonly ICON_SEARCH: string = StringKey.ICON_BASE_PATH + \"search.svg\";\n\tpublic static readonly ICON_HELP: string = StringKey.ICON_BASE_PATH + \"help.svg\";\n\tpublic static readonly ICON_BOOKMARK: string = StringKey.ICON_BASE_PATH + \"bookmark.svg\";\n\tpublic static readonly ICON_SAD: string = StringKey.ICON_BASE_PATH + \"sad.svg\";\n\tpublic static readonly ICON_NEUTRAL: string = StringKey.ICON_BASE_PATH + \"neutral.svg\";\n\tpublic static readonly ICON_DELIGHTFUL: string = StringKey.ICON_BASE_PATH + \"delightful.svg\";\n\tpublic static readonly ICON_LOADER: string = StringKey.ICON_BASE_PATH + 'loader.svg';\n}\n","/**\n * © Rolling Array https://rollingarray.co.in/\n *\n *\n * @summary Settings service\n * @author code@rollingarray.co.in\n *\n * Created at     : 2021-12-16 20:57:08 \n * Last modified  : 2021-12-16 20:57:08 \n */\n\nimport { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { ApiUrls } from \"../constant/api-urls.constant\";\nimport { SettingsModel } from \"../model/settings.model\";\nimport { BaseService } from \"./base.service\";\n\n@Injectable({\n\tprovidedIn: \"root\"\n})\nexport class SettingsService extends BaseService<SettingsModel> {\n\t/**\n\t * @param  {HttpClient} httpClient\n\t */\n\tconstructor(\n\t\thttpClient: HttpClient,\n\t)\n\t{\n\t\tsuper(\n\t\t\thttpClient,\n\t\t);\n\t}\n\n\t/**\n\t * Gets menu\n\t * @returns menu \n\t */\n\tcrudSettings(settings: SettingsModel): Observable<SettingsModel>\n\t{\n\t\treturn this.post(ApiUrls.SETTINGS, settings);\n\t}\n}\n","/**\n * © Rolling Array https://rollingarray.co.in/\n *\n *\n * @summary Base api service\n * @author code@rollingarray.co.in\n *\n * Created at     : 2021-11-01 10:15:11 \n * Last modified  : 2021-12-16 20:56:15\n */\n\nimport { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Subscription, Observable, of } from \"rxjs\";\nimport { map, catchError } from \"rxjs/operators\";\nimport { StringKey } from \"../constant/string.constant\";\nimport { BaseModel } from \"../model/base.model\";\n\n@Injectable({\n\tprovidedIn: \"root\",\n})\nexport abstract class BaseService<T extends BaseModel> {\n\t/**\n\t * String key of base service\n\t */\n\treadonly stringKey = StringKey;\n\n\t/**\n\t * Subscription  of base service\n\t */\n\tprivate subscription: Subscription = new Subscription();\n\n\t/**\n\t * Creates an instance of base service.\n\t * @param httpClient \n\t * @param localStorageService \n\t * @param alertController \n\t * @param dataCommunicationService \n\t */\n\tconstructor(\n\t\tprivate httpClient: HttpClient,\n\n\t) { }\n\n\t/**\n\t * Determines whether init on\n\t */\n\tonInit() { }\n\n\t/**\n\t * Determines whether destroy on\n\t */\n\tonDestroy()\n\t{\n\t\tthis.subscription.unsubscribe();\n\t}\n\n\t/**\n\t * Gets base service\n\t * @param url \n\t * @returns get \n\t */\n\tpublic get(url: string): Observable<T>\n\t{\n\t\tconst apiData = this.httpClient.get(url).pipe(\n\t\t\tmap((response: any) => response as T),\n\t\t\tcatchError((error) => of(null))\n\t\t);\n\t\treturn apiData;\n\t}\n\n\t/**\n\t * Posts base service\n\t * @param url \n\t * @param data \n\t * @returns post \n\t */\n\tpublic post(url: string, data: T): Observable<T>\n\t{\n\t\tconst apiData = this.httpClient.post<T>(url, data).pipe(\n\t\t\tmap((response: any) => response as T),\n\t\t\tcatchError((error) => of(null))\n\t\t);\n\t\treturn apiData;\n\t}\n}\n"]}